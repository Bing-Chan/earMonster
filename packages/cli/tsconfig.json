{
	"compilerOptions": {
	  "target": "ES2016",
	  "module": "ESNext",
	  "declaration": true,
	  "outDir": "dist",
	  "rootDir": "./lib",
	  "noEmit": true, // 不输出文件,即编译后不会生成任何js文件
	  "noEmitOnError": true, // 发送错误时不输出任何文件
	  "noEmitHelpers": true, // 不生成helper函数，减小体积，需要额外安装，常配合importHelpers一起使用
	  "importHelpers": true, // 通过tslib引入helper函数，文件必须是模块
	  "downlevelIteration": true, // 降级遍历器实现，如果目标源是es3/5，那么遍历器会有降级的实现
	  "strict": false, // 开启所有严格的类型检查
	  "alwaysStrict": false, // 在代码中注入'use strict'
	  "noImplicitAny": false, // 不允许隐式的any类型
	  "strictNullChecks": false, // 不允许把null、undefined赋值给其他类型的变量
	  "strictFunctionTypes": false, // 不允许函数参数双向协变
	  "strictPropertyInitialization": false, // 类的实例属性必须初始化
	  "strictBindCallApply": true, // 严格的bind/call/apply检查
	  "noImplicitThis": false, // 不允许this有隐式的any类型
	  "noUnusedLocals": false, // 检查只声明、未使用的局部变量(只提示不报错)
	  "noUnusedParameters": false, // 检查未使用的函数参数(只提示不报错)
	  "noFallthroughCasesInSwitch": false, // 防止switch语句贯穿(即如果没有break语句后面不会执行)
	  "noImplicitReturns": false, //每个分支都会有返回值
	  "esModuleInterop": true, // 允许export=导出，由import from 导入
	  "allowUmdGlobalAccess": false, // 允许在模块中全局变量的方式访问umd模块
	  "moduleResolution": "node", // 模块解析策略，ts默认用node的解析策略，即相对的方式导入

	},
	"include": ["lib/**/*"],
	"exclude": ["dist"]
  }
  