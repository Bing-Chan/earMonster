"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createLogger = exports.Logger = exports.LogLevel = void 0;
var LogLevel;
(function (LogLevel) {
    LogLevel[LogLevel["DEBUG"] = 0] = "DEBUG";
    LogLevel[LogLevel["LOG"] = 1] = "LOG";
    LogLevel[LogLevel["INFO"] = 2] = "INFO";
    LogLevel[LogLevel["WARN"] = 3] = "WARN";
    LogLevel[LogLevel["ERROR"] = 4] = "ERROR";
    LogLevel[LogLevel["OFF"] = 5] = "OFF";
})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));
class Logger {
    constructor(logger = console, level = LogLevel.INFO) {
        this.logger = logger;
        this.level = level;
    }
    setLogLevel(level) {
        this.level = level;
    }
    isDebugEnabled() {
        return this.level <= LogLevel.DEBUG;
    }
    debug(message, ...optionalParams) {
        this.message(LogLevel.DEBUG, message, ...optionalParams);
    }
    log(message, ...optionalParams) {
        this.message(LogLevel.LOG, message, ...optionalParams);
    }
    info(message, ...optionalParams) {
        this.message(LogLevel.INFO, message, ...optionalParams);
    }
    warn(message, ...optionalParams) {
        this.message(LogLevel.WARN, message, ...optionalParams);
    }
    error(message, ...optionalParams) {
        this.message(LogLevel.ERROR, message, ...optionalParams);
    }
    message(level, message, ...optionalParams) {
        if (this.level !== LogLevel.OFF && this.level <= level) {
            const logLevel = Logger.LOG_LEVELS[level];
            if (logLevel) {
                this.logger[logLevel](message, ...optionalParams);
            }
        }
    }
}
exports.Logger = Logger;
Logger.LOG_LEVELS = ['debug', 'log', 'info', 'warn', 'error'];
function createLogger(logger = console) {
    return new Logger(logger);
}
exports.createLogger = createLogger;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2xvZ2dlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxJQUFZLFFBT1g7QUFQRCxXQUFZLFFBQVE7SUFDbEIseUNBQUssQ0FBQTtJQUNMLHFDQUFHLENBQUE7SUFDSCx1Q0FBSSxDQUFBO0lBQ0osdUNBQUksQ0FBQTtJQUNKLHlDQUFLLENBQUE7SUFDTCxxQ0FBRyxDQUFBO0FBQ0wsQ0FBQyxFQVBXLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBT25CO0FBWUQsTUFBYSxNQUFNO0lBZWpCLFlBQ21CLFNBQWtCLE9BQU8sRUFDbEMsUUFBa0IsUUFBUSxDQUFDLElBQUk7UUFEdEIsV0FBTSxHQUFOLE1BQU0sQ0FBbUI7UUFDbEMsVUFBSyxHQUFMLEtBQUssQ0FBMEI7SUFDdEMsQ0FBQztJQU9HLFdBQVcsQ0FBQyxLQUFlO1FBQ2hDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQ3JCLENBQUM7SUFPTSxjQUFjO1FBQ25CLE9BQU8sSUFBSSxDQUFDLEtBQUssSUFBSSxRQUFRLENBQUMsS0FBSyxDQUFDO0lBQ3RDLENBQUM7SUFRTSxLQUFLLENBQUMsT0FBaUIsRUFBRSxHQUFHLGNBQXFCO1FBQ3RELElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsR0FBRyxjQUFjLENBQUMsQ0FBQztJQUMzRCxDQUFDO0lBUU0sR0FBRyxDQUFDLE9BQWlCLEVBQUUsR0FBRyxjQUFxQjtRQUNwRCxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsT0FBTyxFQUFFLEdBQUcsY0FBYyxDQUFDLENBQUM7SUFDekQsQ0FBQztJQVFNLElBQUksQ0FBQyxPQUFpQixFQUFFLEdBQUcsY0FBcUI7UUFDckQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxHQUFHLGNBQWMsQ0FBQyxDQUFDO0lBQzFELENBQUM7SUFRTSxJQUFJLENBQUMsT0FBaUIsRUFBRSxHQUFHLGNBQXFCO1FBQ3JELElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsR0FBRyxjQUFjLENBQUMsQ0FBQztJQUMxRCxDQUFDO0lBUU0sS0FBSyxDQUFDLE9BQWlCLEVBQUUsR0FBRyxjQUFxQjtRQUN0RCxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLEdBQUcsY0FBYyxDQUFDLENBQUM7SUFDM0QsQ0FBQztJQUVPLE9BQU8sQ0FDYixLQUFlLEVBQ2YsT0FBYSxFQUNiLEdBQUcsY0FBcUI7UUFFeEIsSUFBSSxJQUFJLENBQUMsS0FBSyxLQUFLLFFBQVEsQ0FBQyxHQUFHLElBQUksSUFBSSxDQUFDLEtBQUssSUFBSSxLQUFLLEVBQUU7WUFDdEQsTUFBTSxRQUFRLEdBQ1osTUFBTSxDQUFDLFVBQVUsQ0FBQyxLQUFlLENBQUMsQ0FBQztZQUNyQyxJQUFJLFFBQVEsRUFBRTtnQkFDWixJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLE9BQU8sRUFBRSxHQUFHLGNBQWMsQ0FBQyxDQUFDO2FBQ25EO1NBQ0Y7SUFDSCxDQUFDOztBQXBHSCx3QkFxR0M7QUFwR3lCLGlCQUFVLEdBTTlCLENBQUMsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBc0doRCxTQUFnQixZQUFZLENBQUMsU0FBa0IsT0FBTztJQUNwRCxPQUFPLElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzVCLENBQUM7QUFGRCxvQ0FFQyJ9