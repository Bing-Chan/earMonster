import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";import{V as a,Y as o,aJ as t}from"./framework.980b93ee.js";const g='{"title":"useDeepCopy","description":"","frontmatter":{"category":"Utilities"},"headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Manual cloning","slug":"manual-cloning"},{"level":2,"title":"Custom Clone Function","slug":"custom-clone-function"}],"relativePath":"component/use/common/useDeepCopy.md","lastUpdated":1760688335686}',p={};function e(c,n,l,u,i,k){return a(),o("div",null,[...n[0]||(n[0]=[t(`<h1 id="usedeepcopy" tabindex="-1">useDeepCopy <a class="header-anchor" href="#usedeepcopy" aria-hidden="true">#</a></h1><p>Reactive clone of a ref. By default, it use <code>JSON.parse(JSON.stringify())</code> to do the clone.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useDeepCopy <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@ear-monster/use&#39;</span>

<span class="token keyword">const</span> original <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">{</span> key<span class="token operator">:</span> <span class="token string">&#39;value&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> cloned <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useCloned</span><span class="token punctuation">(</span>original<span class="token punctuation">)</span>

original<span class="token punctuation">.</span>value<span class="token punctuation">.</span>key <span class="token operator">=</span> <span class="token string">&#39;some new value&#39;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cloned<span class="token punctuation">.</span>value<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token comment">// &#39;some new value&#39;</span>
</code></pre></div><h2 id="manual-cloning" tabindex="-1">Manual cloning <a class="header-anchor" href="#manual-cloning" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useCloned <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>

<span class="token keyword">const</span> original <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">{</span> key<span class="token operator">:</span> <span class="token string">&#39;value&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> cloned<span class="token punctuation">,</span> sync <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useCloned</span><span class="token punctuation">(</span>original<span class="token punctuation">,</span> <span class="token punctuation">{</span> manual<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

original<span class="token punctuation">.</span>value<span class="token punctuation">.</span>key <span class="token operator">=</span> <span class="token string">&#39;manual&#39;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cloned<span class="token punctuation">.</span>value<span class="token punctuation">.</span>key<span class="token punctuation">)</span> <span class="token comment">// &#39;value&#39;</span>

<span class="token function">sync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cloned<span class="token punctuation">.</span>value<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token comment">// &#39;manual&#39;</span>
</code></pre></div><h2 id="custom-clone-function" tabindex="-1">Custom Clone Function <a class="header-anchor" href="#custom-clone-function" aria-hidden="true">#</a></h2><p>Using <a href="https://www.npmjs.com/package/klona" target="_blank" rel="noopener noreferrer"><code>klona</code></a> for example:</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useCloned <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> klona <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;klona&#39;</span>

<span class="token keyword">const</span> original <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">{</span> key<span class="token operator">:</span> <span class="token string">&#39;value&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> cloned<span class="token punctuation">,</span> sync <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useCloned</span><span class="token punctuation">(</span>original<span class="token punctuation">,</span> <span class="token punctuation">{</span> clone<span class="token operator">:</span> klona <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div>`,9)])])}var m=s(p,[["render",e]]);export{g as __pageData,m as default};
