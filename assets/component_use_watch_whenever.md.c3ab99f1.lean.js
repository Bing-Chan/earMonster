import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";import{V as s,Y as t,aJ as p}from"./framework.980b93ee.js";const h='{"title":"whenever","description":"","frontmatter":{"category":"Watch"},"headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":3,"title":"Callback Function","slug":"callback-function"},{"level":3,"title":"Computed","slug":"computed"},{"level":3,"title":"Options","slug":"options"}],"relativePath":"component/use/watch/whenever.md","lastUpdated":1760688335687}',o={};function e(c,n,u,l,i,k){return s(),t("div",null,[...n[0]||(n[0]=[p(`<h1 id="whenever" tabindex="-1">whenever <a class="header-anchor" href="#whenever" aria-hidden="true">#</a></h1><p>Shorthand for watching value to be truthy.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useAsyncState<span class="token punctuation">,</span> whenever <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> state<span class="token punctuation">,</span> isReady <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAsyncState</span><span class="token punctuation">(</span>
  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://jsonplaceholder.typicode.com/todos/1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">t</span> <span class="token operator">=&gt;</span> t<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>

<span class="token function">whenever</span><span class="token punctuation">(</span>isReady<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><div class="language-ts"><pre><code><span class="token comment">// this</span>
<span class="token function">whenever</span><span class="token punctuation">(</span>ready<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// is equivalent to:</span>
<span class="token function">watch</span><span class="token punctuation">(</span>ready<span class="token punctuation">,</span> <span class="token punctuation">(</span>isReady<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isReady<span class="token punctuation">)</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="callback-function" tabindex="-1">Callback Function <a class="header-anchor" href="#callback-function" aria-hidden="true">#</a></h3><p>Same as <code>watch</code>, the callback will be called with <code>cb(value, oldValue, onInvalidate)</code>.</p><div class="language-ts"><pre><code><span class="token function">whenever</span><span class="token punctuation">(</span>height<span class="token punctuation">,</span> <span class="token punctuation">(</span>current<span class="token punctuation">,</span> lastHeight<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">&gt;</span> lastHeight<span class="token punctuation">)</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Increasing height by </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>current <span class="token operator">-</span> lastHeight<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="computed" tabindex="-1">Computed <a class="header-anchor" href="#computed" aria-hidden="true">#</a></h3><p>Same as <code>watch</code>, you can pass a getter function to calculate on each change.</p><div class="language-ts"><pre><code><span class="token comment">// this</span>
<span class="token function">whenever</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> counter<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token number">7</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;counter is 7 now!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre></div><h3 id="options" tabindex="-1">Options <a class="header-anchor" href="#options" aria-hidden="true">#</a></h3><p>Options and defaults are same with <code>watch</code>.</p><div class="language-ts"><pre><code><span class="token comment">// this</span>
<span class="token function">whenever</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> counter<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token number">7</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;counter is 7 now!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> flush<span class="token operator">:</span> <span class="token string">&#39;sync&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre></div>`,14)])])}var g=a(o,[["render",e]]);export{h as __pageData,g as default};
